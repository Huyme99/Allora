#!/bin/bash

# Ensure script execution halts on any error
set -e

# Check if config.json exists
if [ ! -f config.json ]; then
    echo "Error: config.json file not found. Please provide one." >&2  # Redirect error to stderr
    exit 1
fi

# Extract nodeName from config.json
nodeName=$(jq -r '.wallet.addressKeyName' config.json)
if [ -z "$nodeName" ]; then
    echo "Error: No wallet name provided. Please set 'wallet.addressKeyName' in config.json." >&2
    exit 1
fi

# Create worker-data directory if it doesn't exist
mkdir -p ./worker-data

# Read and stringify config.json content
json_content=$(cat ./config.json)
stringified_json=$(echo "$json_content" | jq -c .)

# Check if mnemonic is already provided in config.json
mnemonic=$(jq -r '.wallet.addressRestoreMnemonic' config.json)
if [ -n "$mnemonic" ]; then
    # Write configuration to env_file
    echo "ALLORA_OFFCHAIN_NODE_CONFIG_JSON='$stringified_json'" > ./worker-data/env_file
    echo "NAME=$nodeName" >> ./worker-data/env_file
    echo "ENV_LOADED=true" >> ./worker-data/env_file

    echo "Wallet mnemonic already provided. Configuration loaded. Proceed to run Docker Compose."
    exit 0  # Exit with success code
fi

# Create env_file if it doesn't exist and set ENV_LOADED to false
if [ ! -f ./worker-data/env_file ]; then
    echo "ENV_LOADED=false" > ./worker-data/env_file
fi

# Read ENV_LOADED from env_file
ENV_LOADED=$(grep '^ENV_LOADED=' ./worker-data/env_file | cut -d '=' -f 2)

if [ "$ENV_LOADED" = "false" ]; then
    # Run Docker container to initialize configuration
    docker run -it --entrypoint=bash \
        -v "$(pwd)/worker-data:/data" \
        -v "$(pwd)/scripts:/scripts" \
        -e NAME="${nodeName}" \
        -e ALLORA_OFFCHAIN_NODE_CONFIG_JSON="${stringified_json}" \
        alloranetwork/allora-chain:v0.4.0 -c "bash /scripts/init.sh"

    echo "Configuration saved to ./worker-data/env_file"
else
    echo "Configuration is already loaded. Set ENV_LOADED to false in ./worker-data/env_file to reload."
fi
